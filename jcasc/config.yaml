credentials:
  system:
    domainCredentials:
      - credentials:
          - giteaAccessToken:
              id: "TOKEN-GITEA"
              scope: GLOBAL
              token: "{AQAAABAAAAAwYrfjlY4+mSRpkuPU6gHIMBOEG+p9XRHOJa2SOY7CxHs+AJntC8isv2IkIJKKjgdB5gHri8HMwDU3V8J4XmLqnw==}"
jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
    - kubernetes:
        containerCap: 10
        containerCapStr: "10"
        defaultsProviderTemplate: "generic-agent"
        jenkinsTunnel: "autojenkins-agent.autojenkins.svc.cluster.local:50000"
        jenkinsUrl: "http://autojenkins.autojenkins.svc.cluster.local:8080"
        name: "kubernetes"
        namespace: "autojenkins"
        podLabels:
          - key: "jenkins/autojenkins-jenkins-agent"
            value: "true"
        serverUrl: "https://kubernetes.default"
        skipTlsVerify: true
        templates:
          - containers:
              - alwaysPullImage: true
                args: "^${computer.jnlpmac} ^${computer.name}"
                envVars:
                  - envVar:
                      key: "JENKINS_URL"
                      value: "http://autojenkins.autojenkins.svc.cluster.local:8080/"
                image: "jenkins/inbound-agent:3261.v9c670a_4748a_9-1"
                name: "jnlp"
                resourceLimitCpu: "1000m"
                resourceLimitMemory: "1024Mi"
                resourceRequestCpu: "50m"
                resourceRequestMemory: "224Mi"
                workingDir: "/home/jenkins/agent"
            id: "03b9b85ad3580c08a84d13588f647a90f6c6c834e6e17dec082b049b9d0e0505"
            label: "autojenkins-jenkins-agent"
            name: "generic-agent"
            namespace: "autojenkins"
            nodeUsageMode: NORMAL
            podRetention: "never"
            serviceAccount: "default"
            slaveConnectTimeout: 100
            slaveConnectTimeoutStr: "100"
            yaml: "apiVersion: v1\nkind: Pod\nmetadata:\n  name: generic-agent\n  namespace:\
          \ autojenkins\nspec:\n  initContainers:\n    - name: init-apk-db\n     \
          \ image: srmmll/generic-agent:0.0.0\n      command: [\"sh\", \"-c\"]\n \
          \     env:\n        - name: CLEAR_CACHE_PATHS\n          value: \"false\"\
          \n      args:\n        - |\n          if [[ $CLEAR_CACHE_PATHS == \"yes\"\
          \ || $CLEAR_CACHE_PATHS == \"true\" ]]; then\n            echo \"Borrando\
          \ contenido de los directorios de caché...\"\n            rm -rf /opt/cache/apk/*\n\
          \            rm -rf /opt/cache/asdf/*\n            rm -rf /opt/cache/asdf/plugins/*\n\
          \          else\n            echo \"No se borra el contenido de los directorios\
          \ de caché.\"\n          fi\n          \n          mkdir -p /opt/cache/apk\n\
          \          mkdir -p /opt/cache/asdf\n          mkdir -p /opt/cache/jenkins\n\
          \          mkdir -p /opt/cache/asdf/plugins\n      volumeMounts:\n     \
          \   - name: agent-cache\n          mountPath: /opt\n  containers:\n    -\
          \ name: generic-agent\n      image: srmmll/generic-agent:0.0.0\n      imagePullPolicy:\
          \ Always\n      command: [\"bash\", \"-c\"]\n      args: [\"sleep 7000\"\
          ]\n      volumeMounts:\n        - name: agent-cache\n          mountPath:\
          \ /opt\n      resources:\n        requests:\n          memory: \"64Mi\"\n\
          \          cpu: \"50m\"\n        limits:\n          memory: \"592Mi\"\n\
          \          cpu: \"250m\"\n  volumes:\n    - name: agent-cache\n      persistentVolumeClaim:\n\
          \        claimName: autojenkins-agent-cache"
            yamlMergeStrategy: "merge"
            yamls:
              - "apiVersion: v1\nkind: Pod\nmetadata:\n  name: generic-agent\n  namespace:\
          \ autojenkins\nspec:\n  initContainers:\n    - name: init-apk-db\n     \
          \ image: srmmll/generic-agent:0.0.0\n      command: [\"sh\", \"-c\"]\n \
          \     env:\n        - name: CLEAR_CACHE_PATHS\n          value: \"false\"\
          \n      args:\n        - |\n          if [[ $CLEAR_CACHE_PATHS == \"yes\"\
          \ || $CLEAR_CACHE_PATHS == \"true\" ]]; then\n            echo \"Borrando\
          \ contenido de los directorios de caché...\"\n            rm -rf /opt/cache/apk/*\n\
          \            rm -rf /opt/cache/asdf/*\n            rm -rf /opt/cache/asdf/plugins/*\n\
          \          else\n            echo \"No se borra el contenido de los directorios\
          \ de caché.\"\n          fi\n          \n          mkdir -p /opt/cache/apk\n\
          \          mkdir -p /opt/cache/asdf\n          mkdir -p /opt/cache/jenkins\n\
          \          mkdir -p /opt/cache/asdf/plugins\n      volumeMounts:\n     \
          \   - name: agent-cache\n          mountPath: /opt\n  containers:\n    -\
          \ name: generic-agent\n      image: srmmll/generic-agent:0.0.0\n      imagePullPolicy:\
          \ Always\n      command: [\"bash\", \"-c\"]\n      args: [\"sleep 7000\"\
          ]\n      volumeMounts:\n        - name: agent-cache\n          mountPath:\
          \ /opt\n      resources:\n        requests:\n          memory: \"64Mi\"\n\
          \          cpu: \"50m\"\n        limits:\n          memory: \"592Mi\"\n\
          \          cpu: \"250m\"\n  volumes:\n    - name: agent-cache\n      persistentVolumeClaim:\n\
          \        claimName: autojenkins-agent-cache"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  disabledAdministrativeMonitors:
    - "hudson.util.DoubleLaunchChecker"
  labelAtoms:
    - name: "autojenkins-jenkins-agent"
    - name: "built-in"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  nodeMonitors:
    - "architecture"
    - "clock"
    - diskSpace:
        freeSpaceThreshold: "1GiB"
        freeSpaceWarningThreshold: "2GiB"
    - "swapSpace"
    - tmpSpace:
        freeSpaceThreshold: "1GiB"
        freeSpaceWarningThreshold: "2GiB"
    - "responseTime"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
        - id: "admin"
          name: "Jenkins Admin"
          properties:
            - "apiToken"
            - "consoleUrlProvider"
            - "mailer"
            - "myView"
            - preferredProvider:
                providerId: "default"
            - "timezone"
            - "experimentalFlags"
  slaveAgentPort: 50000
  updateCenter:
    sites:
      - id: "default"
        url: "https://updates.jenkins.io/update-center.json"
  views:
    - all:
        name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  prism:
    theme: PRISM
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  cps:
    hideSandbox: false
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
unclassified:
  ansiColorBuildWrapper:
    colorMaps:
      - black: "#000000"
        blackB: "#4C4C4C"
        blue: "#1E90FF"
        blueB: "#4682B4"
        cyan: "#00CDCD"
        cyanB: "#00FFFF"
        green: "#00CD00"
        greenB: "#00FF00"
        magenta: "#CD00CD"
        magentaB: "#FF00FF"
        name: "xterm"
        red: "#CD0000"
        redB: "#FF0000"
        white: "#E5E5E5"
        whiteB: "#FFFFFF"
        yellow: "#CDCD00"
        yellowB: "#FFFF00"
      - black: "#000000"
        blackB: "#555555"
        blue: "#0000AA"
        blueB: "#5555FF"
        cyan: "#00AAAA"
        cyanB: "#55FFFF"
        defaultBackground: 0
        defaultForeground: 7
        green: "#00AA00"
        greenB: "#55FF55"
        magenta: "#AA00AA"
        magentaB: "#FF55FF"
        name: "vga"
        red: "#AA0000"
        redB: "#FF5555"
        white: "#AAAAAA"
        whiteB: "#FFFFFF"
        yellow: "#AA5500"
        yellowB: "#FFFF55"
      - black: "black"
        blackB: "black"
        blue: "blue"
        blueB: "blue"
        cyan: "cyan"
        cyanB: "cyan"
        green: "green"
        greenB: "green"
        magenta: "magenta"
        magentaB: "magenta"
        name: "css"
        red: "red"
        redB: "red"
        white: "white"
        whiteB: "white"
        yellow: "yellow"
        yellowB: "yellow"
      - black: "#2E3436"
        blackB: "#2E3436"
        blue: "#3465A4"
        blueB: "#3465A4"
        cyan: "#06989A"
        cyanB: "#06989A"
        defaultBackground: 0
        defaultForeground: 7
        green: "#4E9A06"
        greenB: "#4E9A06"
        magenta: "#75507B"
        magentaB: "#75507B"
        name: "gnome-terminal"
        red: "#CC0000"
        redB: "#CC0000"
        white: "#D3D7CF"
        whiteB: "#D3D7CF"
        yellow: "#C4A000"
        yellowB: "#C4A000"
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubPluginConfig:
    hookUrl: "http://autojenkins:8080/github-webhook/"
  giteaServers:
    servers:
      - credentialsId: "TOKEN-GITEA"
        displayName: "Gitea"
        manageHooks: true
        serverUrl: "http://autojenkins-gitea-http.autojenkins.svc.cluster.local:3000"
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "austakiocaca@gmail.com"
    url: "http://autojenkins:8080/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
tool:
  git:
    installations:
      - home: "git"
        name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
